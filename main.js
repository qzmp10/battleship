(()=>{"use strict";var e,a,t,r,s={426:(e,a,t)=>{t.d(a,{Z:()=>o});var r=t(537),s=t.n(r),d=t(645),i=t.n(d)()(s());i.push([e.id,".container {\n    display: flex;\n    gap: 4rem;\n}\n.player-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap: .5rem;\n    justify-items: center;\n}\n\n.cpu-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap:.5rem;\n    justify-items: center;\n}\n\n.area {\n    width: 3rem;\n    height: 3rem;\n    background-color: rgb(116, 116, 116);\n}\n\n.selecting {\n    background-color: blue;\n}\n\n.error {\n    background-color: red ;\n}\n\n\n.placed {\n    background-color: blueviolet;\n}\n\n.hit {\n    background-color: rgb(255, 0, 0);\n}\n\n.miss {\n    background-color: rgb(211, 211, 211);\n}\n\n\n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,UAAU;IACV,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;AACxC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;;;AAGA;IACI,4BAA4B;AAChC;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,oCAAoC;AACxC",sourcesContent:[".container {\n    display: flex;\n    gap: 4rem;\n}\n.player-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap: .5rem;\n    justify-items: center;\n}\n\n.cpu-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap:.5rem;\n    justify-items: center;\n}\n\n.area {\n    width: 3rem;\n    height: 3rem;\n    background-color: rgb(116, 116, 116);\n}\n\n.selecting {\n    background-color: blue;\n}\n\n.error {\n    background-color: red ;\n}\n\n\n.placed {\n    background-color: blueviolet;\n}\n\n.hit {\n    background-color: rgb(255, 0, 0);\n}\n\n.miss {\n    background-color: rgb(211, 211, 211);\n}\n\n\n\n\n\n\n\n"],sourceRoot:""}]);const o=i},645:e=>{e.exports=function(e){var a=[];return a.toString=function(){return this.map((function(a){var t="",r=void 0!==a[5];return a[4]&&(t+="@supports (".concat(a[4],") {")),a[2]&&(t+="@media ".concat(a[2]," {")),r&&(t+="@layer".concat(a[5].length>0?" ".concat(a[5]):""," {")),t+=e(a),r&&(t+="}"),a[2]&&(t+="}"),a[4]&&(t+="}"),t})).join("")},a.i=function(e,t,r,s,d){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var n=[].concat(e[l]);r&&i[n[0]]||(void 0!==d&&(void 0===n[5]||(n[1]="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {").concat(n[1],"}")),n[5]=d),t&&(n[2]?(n[1]="@media ".concat(n[2]," {").concat(n[1],"}"),n[2]=t):n[2]=t),s&&(n[4]?(n[1]="@supports (".concat(n[4],") {").concat(n[1],"}"),n[4]=s):n[4]="".concat(s)),a.push(n))}},a}},537:e=>{e.exports=function(e){var a=e[1],t=e[3];if(!t)return a;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),d="/*# ".concat(s," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[a].concat(i).concat([d]).join("\n")}return[a].join("\n")}},654:(e,a,t)=>{var r=t(379),s=t.n(r),d=t(795),i=t.n(d),o=t(569),c=t.n(o),l=t(565),n=t.n(l),u=t(216),y=t.n(u),m=t(589),p=t.n(m),b=t(426),h={};h.styleTagTransform=p(),h.setAttributes=n(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=y(),s()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals},379:e=>{var a=[];function t(e){for(var t=-1,r=0;r<a.length;r++)if(a[r].identifier===e){t=r;break}return t}function r(e,r){for(var d={},i=[],o=0;o<e.length;o++){var c=e[o],l=r.base?c[0]+r.base:c[0],n=d[l]||0,u="".concat(l," ").concat(n);d[l]=n+1;var y=t(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==y)a[y].references++,a[y].updater(m);else{var p=s(m,r);r.byIndex=o,a.splice(o,0,{identifier:u,updater:p,references:1})}i.push(u)}return i}function s(e,a){var t=a.domAPI(a);return t.update(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap&&a.supports===e.supports&&a.layer===e.layer)return;t.update(e=a)}else t.remove()}}e.exports=function(e,s){var d=r(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<d.length;i++){var o=t(d[i]);a[o].references--}for(var c=r(e,s),l=0;l<d.length;l++){var n=t(d[l]);0===a[n].references&&(a[n].updater(),a.splice(n,1))}d=c}}},569:e=>{var a={};e.exports=function(e,t){var r=function(e){if(void 0===a[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}a[e]=t}return a[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var a=document.createElement("style");return e.setAttributes(a,e.attributes),e.insert(a,e.options),a}},565:(e,a,t)=>{e.exports=function(e){var a=t.nc;a&&e.setAttribute("nonce",a)}},795:e=>{e.exports=function(e){var a=e.insertStyleElement(e);return{update:function(t){!function(e,a,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var s=void 0!==t.layer;s&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,s&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),a.styleTagTransform(r,e,a.options)}(a,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(a)}}}},589:e=>{e.exports=function(e,a){if(a.styleSheet)a.styleSheet.cssText=e;else{for(;a.firstChild;)a.removeChild(a.firstChild);a.appendChild(document.createTextNode(e))}}},498:(e,a,t)=>{t.d(a,{V:()=>s});var r=t(643);class s{constructor(){this.gameboard=this.createBoard(),this.carrier=new r.lO(5),this.battleship=new r.lO(4),this.cruiser=new r.lO(3),this.submarine=new r.lO(3),this.destroyer=new r.lO(2)}createBoard(){let e=[];for(let a=0;a<100;a++)e.push({ship:!1,state:"intact",position:a});return e}placeShip(e,a,t,r){let s=t;if(!(a<2||a>5)){if("horizontal"==e){if(t>=10)for(;10<s;)s%10==0||(s%=10);if(a>10-s)return;for(let e=0;e<a;e++)0==e?(this.gameboard[t].ship=!0,this.gameboard[t].type=r):(this.gameboard[t+e].ship=!0,this.gameboard[t+e].type=r)}if("vertical"==e){if(10*a>=100-t)return;for(let e=0;e<a;e++)this.gameboard[t+10*e].ship=!0,this.gameboard[t+10*e].type=r}}}receiveAttack(e){let a=[];if(this.gameboard[e].state="hit",1==this.gameboard[e].ship){let t=this.gameboard[e].type,r=this.gameboard.filter((e=>e.type==`${t}`));for(const e of r)"hit"==e.state&&a.push(r.indexOf(e));if(0!=a.length)if("carrier"==t)for(const e of a)this.carrier.zones[`zone${e+1}`]="hit";else if("battleship"==t)for(const e of a)this.battleship.zones[`zone${e+1}`]="hit";else if("submarine"==t)for(const e of a)this.submarine.zones[`zone${e+1}`]="hit";else if("cruiser"==t)for(const e of a)this.cruiser.zones[`zone${e+1}`]="hit";else if("destroyer"==t)for(const e of a)this.destroyer.zones[`zone${e+1}`]="hit"}else this.gameboard[e].miss=!0}areAllShipsSunk(){return!!(Object.values(this.carrier.zones).every((e=>"hit"==e))&&Object.values(this.battleship.zones).every((e=>"hit"==e))&&Object.values(this.cruiser.zones).every((e=>"hit"==e))&&Object.values(this.submarine.zones).every((e=>"hit"==e))&&Object.values(this.destroyer.zones).every((e=>"hit"==e)))}}new s},138:(e,a,t)=>{t.a(e,(async(e,a)=>{try{t(654),t(498),t(643);var r=t(507);async function s(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=0&max=9&count=1");const a=await e.json();return Number(a)}catch(e){console.log(e)}}async function d(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=6&max=9&count=1");const a=await e.json();return Number(a)}catch(e){console.log(e)}}async function i(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=94&max=97&count=1");const a=await e.json();return Number(a)}catch(e){console.log(e)}}async function o(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=91&max=94&count=1");const a=await e.json();return Number(a)}catch(e){console.log(e)}}const c=new r.J("player1"),l=new r.J("CPU");let n=await s();async function u(){try{if(n<5)return{cruiserPosition:await i(),destroyerPosition:10*await d()+1};if(n>=5)return{cruiserPosition:await o(),destroyerPosition:10*await d()+8}}catch(e){console.log(e)}}async function y(){try{l.ownBoard.placeShip("vertical",5,n,"carrier")}catch(e){console.log(e)}}async function m(){try{if(n<5){let e=n+33;l.ownBoard.placeShip("vertical",4,e,"battleship")}else{let e=n+27;l.ownBoard.placeShip("vertical",4,e,"battleship")}}catch(e){console.log(e)}}async function p(){try{if(n<5){let e=n+25;l.ownBoard.placeShip("vertical",3,e,"submarine")}else{let e=n+15;l.ownBoard.placeShip("vertical",3,e,"submarine")}}catch(e){console.log(e)}}async function b(){try{let e=await u();console.log(e.cruiserPosition),l.ownBoard.placeShip("horizontal",3,e.cruiserPosition,"cruiser")}catch(e){console.log(e)}}async function h(){try{let e=await u();console.log(e.destroyerPosition),l.ownBoard.placeShip("horizontal",2,e.destroyerPosition,"destroyer")}catch(e){console.log(e)}}console.log(n);const f=document.querySelector(".player-container"),v=document.querySelector(".cpu-container"),g=(document.querySelector(".begin"),document.querySelector(".direction")),L=document.querySelector(".announcements");let S=0;c.ownBoard.gameboard.forEach((e=>{let a=document.createElement("div");a.classList.add("intact"),a.classList.add("area"),a.classList.add("player"),a.setAttribute("data-id-player",S),f.appendChild(a),S+=1})),S=0,l.ownBoard.gameboard.forEach((e=>{let a=document.createElement("div");a.classList.add("intact"),a.classList.add("area"),a.classList.add("cpu"),a.setAttribute("data-id-cpu",S),v.appendChild(a),S+=1}));let P=document.querySelectorAll(".player"),A=document.querySelectorAll(".cpu"),N="vertical";g.addEventListener("click",(()=>{"vertical"==N?(N="horizontal",g.textContent="Switch to Vertical"):(N="vertical",g.textContent="Switch to Horizontal")}));let q="carrier";L.textContent="Place your carrier!",P.forEach((e=>{"done"!=q&&(e.addEventListener("mouseover",(()=>{"carrier"==q&&("vertical"==N?e.dataset.idPlayer>=60?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+5>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("selecting"))),"battleship"==q&&("vertical"==N?e.dataset.idPlayer>=70?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+4>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("selecting"))),"submarine"==q&&("vertical"==N?e.dataset.idPlayer>=80?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+3>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"))),"cruiser"==q&&("vertical"==N?e.dataset.idPlayer>=80?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+3>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"))),"destroyer"==q&&("vertical"==N?e.dataset.idPlayer>=90?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+2>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting")))})),e.addEventListener("mouseout",(()=>{"carrier"==q&&("vertical"==N?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.remove("selecting","error"))),"battleship"==q&&("vertical"==N?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.remove("selecting","error"))),"submarine"==q&&("vertical"==N?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"))),"cruiser"==q&&("vertical"==N?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"))),"destroyer"==q&&(console.log(q),"vertical"==N?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error")))})),e.addEventListener("click",(()=>{if(!e.classList.contains("placed")){if("carrier"==q){if(e.classList.contains("error"))return;return"vertical"==N?(c.ownBoard.placeShip("vertical",5,Number(e.dataset.idPlayer),"carrier"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",5,Number(e.dataset.idPlayer),"carrier"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("placed")),q="battleship",void(L.textContent="Place your battleship!")}if("battleship"==q){if(e.classList.contains("error"))return;return"vertical"==N?(c.ownBoard.placeShip("vertical",4,Number(e.dataset.idPlayer),"battleship"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",4,Number(e.dataset.idPlayer),"battleship"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("placed")),q="submarine",void(L.textContent="Place your submarine!")}if("submarine"==q){if(e.classList.contains("error"))return;return"vertical"==N?(c.ownBoard.placeShip("vertical",3,Number(e.dataset.idPlayer),"submarine"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",3,Number(e.dataset.idPlayer),"submarine"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed")),q="cruiser",void(L.textContent="Place your cruiser!")}if("cruiser"==q){if(e.classList.contains("error"))return;return"vertical"==N?(c.ownBoard.placeShip("vertical",3,Number(e.dataset.idPlayer),"cruiser"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",3,Number(e.dataset.idPlayer),"cruiser"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed")),q="destroyer",void(L.textContent="Place your destroyer!")}if("destroyer"==q){if(e.classList.contains("error"))return;return"vertical"==N?(c.ownBoard.placeShip("vertical",2,Number(e.dataset.idPlayer),"destroyer"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",2,Number(e.dataset.idPlayer),"destroyer"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed")),q="done",L.textContent="TIME TO ATTACK THE ENNEMY SHIP!",void A.forEach((e=>{e.addEventListener("click",(()=>{if(console.log(e.dataset.idCpu),l.ownBoard.receiveAttack(e.dataset.idCpu),console.log(l.ownBoard.gameboard[e.dataset.idCpu]),0==l.ownBoard.gameboard[e.dataset.idCpu].ship?e.classList.add("miss"):e.classList.add("hit"),"miss"==C){let e=Math.floor(100*Math.random());for(;B.includes(e);)e=Math.floor(100*Math.random());B.push(e),$=e,c.ownBoard.receiveAttack(e),console.log(c.ownBoard.gameboard[e]),0==c.ownBoard.gameboard[e].ship?(document.querySelector(`[data-id-player='${e}'`).classList.add("miss"),C="miss"):(document.querySelector(`[data-id-player='${e}'`).classList.add("hit"),C="hit")}else{if(0==S){let e=1,a=Math.floor(100*Math.random());for(w=$+1;B.includes(w);)w+=e,e++;if(w<0||w>99){for(;B.includes(a);)a=Math.floor(100*Math.random());c.ownBoard.receiveAttack(a)}else c.ownBoard.receiveAttack(w);return 0==c.ownBoard.gameboard[w].ship?document.querySelector(`[data-id-player='${w}'`).classList.add("miss"):document.querySelector(`[data-id-player='${w}'`).classList.add("hit"),void(S+=1)}if(1==S){let e=1,a=Math.floor(100*Math.random());for(w=$-1;B.includes(w);)w-=e,e++;if(w<0||w>99){for(;B.includes(a);)a=Math.floor(100*Math.random());c.ownBoard.receiveAttack(a)}else c.ownBoard.receiveAttack(w);return 0==c.ownBoard.gameboard[w].ship?document.querySelector(`[data-id-player='${w}'`).classList.add("miss"):document.querySelector(`[data-id-player='${w}'`).classList.add("hit"),void(S+=1)}if(2==S){let e=1,a=Math.floor(100*Math.random());for(w=$+10;B.includes(w);)w+=10*e,e++;if(w<0||w>99){for(;B.includes(a);)a=Math.floor(100*Math.random());c.ownBoard.receiveAttack(a)}else c.ownBoard.receiveAttack(w);return 0==c.ownBoard.gameboard[w].ship?document.querySelector(`[data-id-player='${w}'`).classList.add("miss"):document.querySelector(`[data-id-player='${w}'`).classList.add("hit"),void(S+=1)}if(3==S){let e=1,a=Math.floor(100*Math.random());for(w=$-10;B.includes(w);)w-=10*e,e++;if(w<0||w>99){for(;B.includes(a);)a=Math.floor(100*Math.random());c.ownBoard.receiveAttack(a)}else c.ownBoard.receiveAttack(w);return 0==c.ownBoard.gameboard[w].ship?document.querySelector(`[data-id-player='${w}'`).classList.add("miss"):document.querySelector(`[data-id-player='${w}'`).classList.add("hit"),C="miss",void(S=0)}}}))}))}}})))})),y(),m(),p(),b(),h();let $=0,w=0,C="miss",B=[];S=0,a()}catch(k){a(k)}}),1)},507:(e,a,t)=>{t.d(a,{J:()=>s});var r=t(498);class s{constructor(e){this.name=e,this.ownBoard=new r.V}attackCPU(e,a){a.receiveAttack(e)}attackPlayer(e,a=Math.floor(100*Math.random())){return e.receiveAttack(a),a}}},643:(e,a,t)=>{t.d(a,{lO:()=>r});class r{constructor(e){this.length=e,this.zones=this.createZones()}reset(){this.zones=this.createZones()}createZones(e=this.length){let a={};for(let t=0;t<e;t++)a[`zone${t+1}`]="intact";return a}hit(e){return e>Object.keys(this.zones).length||(this.zones[`zone${e}`]="hit"),this.zones}isSunk(){return!!Object.values(this.zones).every((e=>"hit"==e))}sinkShip(){for(let e=0;e<this.length;e++)this.zones[`zone${e+1}`]="hit"}}new r(4),new r(3),new r(2),new r(1)}},d={};function i(e){var a=d[e];if(void 0!==a)return a.exports;var t=d[e]={id:e,exports:{}};return s[e](t,t.exports,i),t.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",a="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},i.a=(s,d,i)=>{var o;i&&((o=[]).d=1);var c,l,n,u=new Set,y=s.exports,m=new Promise(((e,a)=>{n=a,l=e}));m[a]=y,m[e]=e=>(o&&e(o),u.forEach(e),m.catch((e=>{}))),s.exports=m,d((s=>{var d;c=(s=>s.map((s=>{if(null!==s&&"object"==typeof s){if(s[e])return s;if(s.then){var d=[];d.d=0,s.then((e=>{i[a]=e,r(d)}),(e=>{i[t]=e,r(d)}));var i={};return i[e]=e=>e(d),i}}var o={};return o[e]=e=>{},o[a]=s,o})))(s);var i=()=>c.map((e=>{if(e[t])throw e[t];return e[a]})),l=new Promise((a=>{(d=()=>a(i)).r=0;var t=e=>e!==o&&!u.has(e)&&(u.add(e),e&&!e.d&&(d.r++,e.push(d)));c.map((a=>a[e](t)))}));return d.r?l:i()}),(e=>(e?n(m[t]=e):l(y),r(o)))),o&&(o.d=0)},i.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return i.d(a,{a}),a},i.d=(e,a)=>{for(var t in a)i.o(a,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:a[t]})},i.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),i.nc=void 0,i(138)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,