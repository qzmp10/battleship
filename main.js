(()=>{"use strict";var e,t,a,r,s={426:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(537),s=a.n(r),o=a(645),i=a.n(o)()(s());i.push([e.id,".container {\n    display: flex;\n    gap: 4rem;\n}\n.player-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap: .5rem;\n    justify-items: center;\n}\n\n.cpu-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap:.5rem;\n    justify-items: center;\n}\n\n.area {\n    width: 3rem;\n    height: 3rem;\n    background-color: rgb(194, 194, 194);\n}\n\n.hit {\n    background-color: rgb(51, 255, 0);\n}\n\n.selecting {\n    background-color: blue;\n}\n\n.error {\n    background-color: red ;\n}\n\n.placed {\n    background-color: blueviolet;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,UAAU;IACV,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,SAAS;IACT,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;AACxC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,4BAA4B;AAChC",sourcesContent:[".container {\n    display: flex;\n    gap: 4rem;\n}\n.player-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap: .5rem;\n    justify-items: center;\n}\n\n.cpu-container {\n    display: grid;\n    grid-template-columns: repeat(10, 3rem);\n    grid-template-rows: repeat(10, 3rem);\n    gap:.5rem;\n    justify-items: center;\n}\n\n.area {\n    width: 3rem;\n    height: 3rem;\n    background-color: rgb(194, 194, 194);\n}\n\n.hit {\n    background-color: rgb(51, 255, 0);\n}\n\n.selecting {\n    background-color: blue;\n}\n\n.error {\n    background-color: red ;\n}\n\n.placed {\n    background-color: blueviolet;\n}\n"],sourceRoot:""}]);const n=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var a="",r=void 0!==t[5];return t[4]&&(a+="@supports (".concat(t[4],") {")),t[2]&&(a+="@media ".concat(t[2]," {")),r&&(a+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),a+=e(t),r&&(a+="}"),t[2]&&(a+="}"),t[4]&&(a+="}"),a})).join("")},t.i=function(e,a,r,s,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var n=0;n<this.length;n++){var c=this[n][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),a&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=a):l[2]=a),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],a=e[3];if(!a)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(s," */"),i=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},654:(e,t,a)=>{var r=a(379),s=a.n(r),o=a(795),i=a.n(o),n=a(569),c=a.n(n),d=a(565),l=a.n(d),u=a(216),m=a.n(u),y=a(589),p=a.n(y),h=a(426),b={};b.styleTagTransform=p(),b.setAttributes=l(),b.insert=c().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=m(),s()(h.Z,b),h.Z&&h.Z.locals&&h.Z.locals},379:e=>{var t=[];function a(e){for(var a=-1,r=0;r<t.length;r++)if(t[r].identifier===e){a=r;break}return a}function r(e,r){for(var o={},i=[],n=0;n<e.length;n++){var c=e[n],d=r.base?c[0]+r.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var m=a(u),y={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)t[m].references++,t[m].updater(y);else{var p=s(y,r);r.byIndex=n,t.splice(n,0,{identifier:u,updater:p,references:1})}i.push(u)}return i}function s(e,t){var a=t.domAPI(t);return a.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;a.update(e=t)}else a.remove()}}e.exports=function(e,s){var o=r(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var n=a(o[i]);t[n].references--}for(var c=r(e,s),d=0;d<o.length;d++){var l=a(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=c}}},569:e=>{var t={};e.exports=function(e,a){var r=function(e){if(void 0===t[e]){var a=document.querySelector(e);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}t[e]=a}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(a)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,a)=>{e.exports=function(e){var t=a.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(a){!function(e,t,a){var r="";a.supports&&(r+="@supports (".concat(a.supports,") {")),a.media&&(r+="@media ".concat(a.media," {"));var s=void 0!==a.layer;s&&(r+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),r+=a.css,s&&(r+="}"),a.media&&(r+="}"),a.supports&&(r+="}");var o=a.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,a)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},498:(e,t,a)=>{a.d(t,{V:()=>s});var r=a(643);class s{constructor(){this.gameboard=this.createBoard(),this.carrier=new r.lO(5),this.battleship=new r.lO(4),this.cruiser=new r.lO(3),this.submarine=new r.lO(3),this.destroyer=new r.lO(2)}createBoard(){let e=[];for(let t=0;t<100;t++)e.push({ship:!1,state:"intact",position:t});return e}placeShip(e,t,a,r){let s=a;if(!(t<2||t>5)){if("horizontal"==e){if(a>=10)for(;10<s;)s%10==0||(s%=10);if(t>10-s)return;for(let e=0;e<t;e++)0==e?(this.gameboard[a].ship=!0,this.gameboard[a].type=r):(this.gameboard[a+e].ship=!0,this.gameboard[a+e].type=r)}if("vertical"==e){if(10*t>=100-a)return;for(let e=0;e<t;e++)this.gameboard[a+10*e].ship=!0,this.gameboard[a+10*e].type=r}}}receiveAttack(e){let t=[];if(this.gameboard[e].state="hit",1==this.gameboard[e].ship){let a=this.gameboard[e].type,r=this.gameboard.filter((e=>e.type==`${a}`));for(const e of r)"hit"==e.state&&t.push(r.indexOf(e));if(0!=t.length)if("carrier"==a)for(const e of t)this.carrier.zones[`zone${e+1}`]="hit";else if("battleship"==a)for(const e of t)this.battleship.zones[`zone${e+1}`]="hit";else if("submarine"==a)for(const e of t)this.submarine.zones[`zone${e+1}`]="hit";else if("cruiser"==a)for(const e of t)this.cruiser.zones[`zone${e+1}`]="hit";else if("destroyer"==a)for(const e of t)this.destroyer.zones[`zone${e+1}`]="hit"}else this.gameboard[e].miss=!0}areAllShipsSunk(){return!!(Object.values(this.carrier.zones).every((e=>"hit"==e))&&Object.values(this.battleship.zones).every((e=>"hit"==e))&&Object.values(this.cruiser.zones).every((e=>"hit"==e))&&Object.values(this.submarine.zones).every((e=>"hit"==e))&&Object.values(this.destroyer.zones).every((e=>"hit"==e)))}}new s},138:(e,t,a)=>{a.a(e,(async(e,t)=>{try{a(654),a(498),a(643);var r=a(507);async function s(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=0&max=9&count=1");const t=await e.json();return Number(t)}catch(e){console.log(e)}}async function o(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=6&max=9&count=1");const t=await e.json();return Number(t)}catch(e){console.log(e)}}async function i(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=94&max=97&count=1");const t=await e.json();return Number(t)}catch(e){console.log(e)}}async function n(){try{let e=await fetch("http://www.randomnumberapi.com/api/v1.0/random?min=91&max=94&count=1");const t=await e.json();return Number(t)}catch(e){console.log(e)}}const c=new r.J("player1"),d=new r.J("CPU");let l=await s();async function u(){try{if(l<5)return{cruiserPosition:await i(),destroyerPosition:10*await o()+1};if(l>=5)return{cruiserPosition:await n(),destroyerPosition:10*await o()+8}}catch(e){console.log(e)}}async function m(){try{d.ownBoard.placeShip("vertical",5,l,"carrier")}catch(e){console.log(e)}}async function y(){try{if(l<5){let e=l+33;d.ownBoard.placeShip("vertical",4,e,"battleship")}else{let e=l+27;d.ownBoard.placeShip("vertical",4,e,"battleship")}}catch(e){console.log(e)}}async function p(){try{if(l<5){let e=l+25;d.ownBoard.placeShip("vertical",3,e,"submarine")}else{let e=l+15;d.ownBoard.placeShip("vertical",3,e,"submarine")}}catch(e){console.log(e)}}async function h(){try{let e=await u();console.log(e.cruiserPosition),d.ownBoard.placeShip("horizontal",3,e.cruiserPosition,"cruiser")}catch(e){console.log(e)}}async function b(){try{let e=await u();console.log(e.destroyerPosition),d.ownBoard.placeShip("horizontal",2,e.destroyerPosition,"destroyer")}catch(e){console.log(e)}}console.log(l);const f=document.querySelector(".player-container"),v=document.querySelector(".cpu-container"),g=document.querySelector(".begin"),A=document.querySelector(".direction"),S=document.querySelector(".announcements");let L=0;c.ownBoard.gameboard.forEach((e=>{let t=document.createElement("div");t.classList.add("intact"),t.classList.add("area"),t.classList.add("player"),t.setAttribute("data-id-player",L),f.appendChild(t),L+=1})),L=0,d.ownBoard.gameboard.forEach((e=>{let t=document.createElement("div");t.classList.add("intact"),t.classList.add("area"),t.classList.add("cpu"),t.setAttribute("data-id-cpu",L),v.appendChild(t),L+=1}));let P=document.querySelectorAll(".player");document.querySelectorAll(".cpu").forEach((e=>{e.addEventListener("click",(()=>{console.log(e.dataset.idCpu),d.ownBoard.receiveAttack(e.dataset.idCpu),console.log(d.ownBoard.gameboard[e.dataset.idCpu]),e.classList.add("hit")}))}));let w="vertical";A.addEventListener("click",(()=>{"vertical"==w?(w="horizontal",A.textContent="Switch to Vertical"):(w="vertical",A.textContent="Switch to Horizontal")})),g.addEventListener("click",(()=>{S.textContent="Place your cruiser!",P.forEach((e=>{e.addEventListener("mouseover",(()=>{"vertical"==w?e.dataset.idPlayer>=60?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+5>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("selecting"))})),e.addEventListener("mouseout",(()=>{"vertical"==w?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.remove("selecting","error"))})),e.addEventListener("click",(()=>{if(!e.classList.contains("error"))return"vertical"==w?(f.classList.add("cruiser"),c.ownBoard.placeShip("vertical",5,Number(e.dataset.idPlayer),"cruiser"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("placed"),void document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+40}'`).classList.add("placed")):(f.classList.add("cruiser"),c.ownBoard.placeShip("horizontal",5,Number(e.dataset.idPlayer),"cruiser"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("placed"),void document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+4}'`).classList.add("placed"))}))})),S.textContent="Place your battleship!",P.forEach((e=>{e.addEventListener("mouseover",(()=>{"vertical"==w?e.dataset.idPlayer>=70?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("selecting")):Number(e.dataset.idPlayer.slice(1,2))+4>10?(e.classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("error")):(e.classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("selecting"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("selecting"))})),e.addEventListener("mouseout",(()=>{"vertical"==w?(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.remove("selecting","error")):(e.classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.remove("selecting","error"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.remove("selecting","error"))})),e.addEventListener("click",(()=>{if(!e.classList.contains("error"))return"vertical"==w?(c.ownBoard.placeShip("vertical",4,Number(e.dataset.idPlayer),"battleship"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+10}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+20}'`).classList.add("placed"),void document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+30}'`).classList.add("placed")):(c.ownBoard.placeShip("horizontal",4,Number(e.dataset.idPlayer),"battleship"),e.classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+1}'`).classList.add("placed"),document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+2}'`).classList.add("placed"),void document.querySelector(`[data-id-player='${Number(e.dataset.idPlayer)+3}'`).classList.add("placed"))}))}))})),m(),y(),p(),h(),b(),t()}catch(N){t(N)}}),1)},507:(e,t,a)=>{a.d(t,{J:()=>s});var r=a(498);class s{constructor(e){this.name=e,this.ownBoard=new r.V}attackCPU(e,t){t.receiveAttack(e)}attackPlayer(e,t=Math.floor(100*Math.random())){return e.receiveAttack(t),t}}},643:(e,t,a)=>{a.d(t,{lO:()=>r});class r{constructor(e){this.length=e,this.zones=this.createZones()}reset(){this.zones=this.createZones()}createZones(e=this.length){let t={};for(let a=0;a<e;a++)t[`zone${a+1}`]="intact";return t}hit(e){return e>Object.keys(this.zones).length||(this.zones[`zone${e}`]="hit"),this.zones}isSunk(){return!!Object.values(this.zones).every((e=>"hit"==e))}sinkShip(){for(let e=0;e<this.length;e++)this.zones[`zone${e+1}`]="hit"}}new r(4),new r(3),new r(2),new r(1)}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={id:e,exports:{}};return s[e](a,a.exports,i),a.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",a="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},i.a=(s,o,i)=>{var n;i&&((n=[]).d=1);var c,d,l,u=new Set,m=s.exports,y=new Promise(((e,t)=>{l=t,d=e}));y[t]=m,y[e]=e=>(n&&e(n),u.forEach(e),y.catch((e=>{}))),s.exports=y,o((s=>{var o;c=(s=>s.map((s=>{if(null!==s&&"object"==typeof s){if(s[e])return s;if(s.then){var o=[];o.d=0,s.then((e=>{i[t]=e,r(o)}),(e=>{i[a]=e,r(o)}));var i={};return i[e]=e=>e(o),i}}var n={};return n[e]=e=>{},n[t]=s,n})))(s);var i=()=>c.map((e=>{if(e[a])throw e[a];return e[t]})),d=new Promise((t=>{(o=()=>t(i)).r=0;var a=e=>e!==n&&!u.has(e)&&(u.add(e),e&&!e.d&&(o.r++,e.push(o)));c.map((t=>t[e](a)))}));return o.r?d:i()}),(e=>(e?l(y[a]=e):d(m),r(n)))),n&&(n.d=0)},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var a in t)i.o(t,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.nc=void 0,i(138)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,